{"version":3,"sources":["Components/Form/Form.js","API/index.js","Components/conversions.js","Components/SunTrack/SunTrack.js","Components/UserTile/UserTile.js","Components/Card/Card.js","Components/Tags/Tags.js","Components/Home/Home.js","Components/Header/Header.js","App.js","serviceWorker.js","index.js","images/branding@2x.png"],"names":["Form","props","useState","inputLocation","setinputLocation","submitForm","document","getElementById","value","isAlreadyActive","activeCities","map","activeCity","name","console","log","isLocal","cityArr","JSON","parse","localStorage","getItem","i","length","timestamp","dt","now","Math","floor","Date","getWeather","axios","get","process","then","data","error","catch","err","getInputWeatherData","id","onSubmit","e","preventDefault","htmlFor","type","placeholder","onChange","target","KelvinToDegrees","k","toFixed","KelvinToFahrenheit","SunTrack","fraction","setFraction","useEffect","denominator","sunset","sunrise","numerator","toPrecision","className","style","color","text","circleRatio","styles","buildStyles","trailColor","pathColor","textColor","textSize","rotation","strokeLinecap","UserTile","userData","setUserData","success","position","lat","lon","d","toUTCString","coords","latitude","longitude","temp","main","warn","code","message","options","enableHighAccuracy","timeout","maximumAge","navigator","geolocation","watchPosition","unit","weather","description","sys","Card","calcTempDifference","difference","userTemp","Tags","hover","setHover","onMouseEnter","onMouseLeave","onClick","close","index","fontSize","Home","setUserTemp","cities","setCities","tagCloseCallback","cityIndex","currCities","splice","push","setItem","stringify","city","key","Header","anchorEl","setAnchorEl","open","Boolean","handleClose","event","currentTarget","innerText","toLowerCase","src","logo","alt","Button","aria-controls","Menu","keepMounted","onClose","TransitionComponent","Fade","MenuItem","App","setUnit","window","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.17872df2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { getInputWeatherData } from \"../../API\";\n\nimport \"./Form.scss\";\nimport { act } from \"react-dom/test-utils\";\n\nconst Form = (props) => {\n  // Storing form input\n  const [inputLocation, setinputLocation] = useState(\"\");\n\n  // Set form input value\n  const updateHandler = (e) => {\n    setinputLocation(e.target.value);\n  };\n\n  // On form submission\n  const submitForm = () => {\n    // reset form input\n    document.getElementById(\"form-input\").value = \"\";\n    // check if input location is already active \n    let isAlreadyActive = false;\n    props.activeCities.map((activeCity) => {\n      if (inputLocation == activeCity.name) {\n        isAlreadyActive = true;\n      }\n    });\n    if (!isAlreadyActive) {\n      let isLocal = false;\n      // Check local Storage for value\n      let cityArr = JSON.parse(localStorage.getItem(\"cities\"));\n      if (cityArr) {\n        for (let i = 0; i < cityArr.length; i++) {\n          if (cityArr[i].name == inputLocation) {\n            // check timestamp within 5 minutes\n            const timestamp = cityArr[i].dt;\n            const now = Math.floor(Date.now() / 1000);\n            console.log(timestamp);\n            console.log(now);\n            console.log(now - timestamp);\n            if (now - timestamp > 3000) {\n              console.log(\"Outdated Local Storage Data\");\n              break;\n            } else {\n              console.log(\"Using Local Storage Data\");\n              isLocal = true;\n              props.getWeather(cityArr[i], isLocal);\n              break;\n            }\n          }\n        }\n      }\n      // if not in local storage, API call\n      if (!isLocal) {\n        getInputWeatherData(inputLocation).then((data) => {\n          // console.log(data);\n          props.getWeather(data, isLocal);\n        });\n      }\n    } else {\n      console.log(\"City already in list\");\n    }\n  };\n\n  return (\n    <div id=\"form-wrapper\">\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          submitForm();\n        }}\n      >\n        <label htmlFor=\"city\">Enter a City</label>\n        <input\n          type=\"text\"\n          id=\"form-input\"\n          name=\"city\"\n          placeholder=\"...\"\n          onChange={updateHandler}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import axios from \"axios\";\n\nconst getUserWeatherData = (lat, lon) => {\n  return axios\n    .get(\n      `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_API_KEY}`\n    )\n    .then((data) => {\n      console.log(data);\n      return data.data;\n    })\n    .catch((err) => {\n      console.log(\"Something went wrong:\");\n      console.log(err);\n    });\n};\n\nconst getInputWeatherData = (inputLocation) => {\n  \n  return axios\n    .get(\n      `http://api.openweathermap.org/data/2.5/weather?q=${inputLocation}&appid=${process.env.REACT_APP_API_KEY}`\n    )\n    .then((data) => {\n      try {\n        return data.data;\n      } catch (error) {\n        console.log(error);\n      }\n    })\n    .catch((err) => console.log(err));\n};\n\nexport { getUserWeatherData, getInputWeatherData };\n","const KELVIN = 273.16;\n\nconst KelvinToDegrees = (k) => {\n    return (k - KELVIN).toFixed(0);\n}\n\nconst KelvinToFahrenheit = (k) => {\n    return (k * (9/5) - 459.67).toFixed(0);\n}\n\nexport {KelvinToDegrees, KelvinToFahrenheit}","import React, { useState, useEffect } from \"react\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nimport Brightness3Icon from \"@material-ui/icons/Brightness5\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\n\nimport \"./SunTrack.scss\";\n\nconst SunTrack = (props) => {\n  const [sunrise, setSunrise] = useState(0);\n  const [sunset, setSunset] = useState(0);\n  const [currTime, setCurrTime] = useState(0);\n  const [fraction, setFraction] = useState(0);\n\n  useEffect(() => {\n\n    let denominator = props.sunset - props.sunrise;\n    console.log(\"Denominator: \" + denominator);\n    let numerator = props.sunset - Math.floor(Date.now() / 1000);\n    console.log(\"Numerator: \" + numerator);\n    let frac = (1 - numerator / denominator) * 100;\n    setFraction(frac.toPrecision(2));\n  }, []);\n\n  return (\n    <div id=\"suntrack-wrapper\">\n      <div className=\"suntrack-icons\">\n        <Brightness3Icon style={{color: \"#FFFF00\"}}/>\n      </div>\n      <div id=\"suntrack-container\">\n        <CircularProgressbar\n          value={fraction}\n          text={`${fraction}%`}\n          circleRatio={0.5}\n          styles={buildStyles({\n            trailColor: \"#ffff00\",\n            pathColor: \"#ffff00\",\n            textColor: \"#0C1642\",\n            textSize: \"26px\",\n            rotation: 3 / 4,\n            strokeLinecap: \"rount\",\n            trailColor: \"#eee\",\n          })}\n        />\n      </div>\n      <div className=\"suntrack-icons\">\n          <Brightness4Icon style={{color: \"#ffff00\"}}/>\n      </div>\n      \n    </div>\n  );\n};\n\nexport default SunTrack;\n","import React, { useState, useEffect } from \"react\";\nimport { getUserWeatherData } from \"../../API\";\nimport { KelvinToDegrees, KelvinToFahrenheit } from \"../conversions\";\n\nimport \"../../weather_icons/css/owfont-regular.css\";\nimport \"./UserTile.scss\";\nimport SunTrack from \"../SunTrack/SunTrack\";\n\nconst UserTile = (props) => {\n  const [userData, setUserData] = useState();\n\n  // watchPosition success\n  const success = (position) => {\n    let d = new Date();\n    console.log(\"Getting Users Position at:\" + d.toUTCString());\n    try {\n      getUserWeatherData(\n        position.coords.latitude,\n        position.coords.longitude\n      ).then((data) => {\n        console.log(data);\n        setUserData(data);\n        props.temp(data.main.temp);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // watchPosition error\n  const error = (err) => {\n    console.warn(`Error: ${err.code}, ${err.message}`);\n  };\n\n  // watchPosition options\n  const options = {\n    enableHighAccuracy: false,\n    timeout: 5000,\n    maximumAge: 60000,\n  };\n\n  // get users location on initial Render\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(success, error, options);\n    } else {\n      console.log(\"Navigation not enabled by your browser\");\n    }\n  }, []);\n\n  return (\n    <div id=\"userTile-wrapper\">\n      {userData != null ? (\n        <div id=\"userTile-container\">\n          <div id=\"userTile-container_text\">\n            <h3>{userData.name}</h3>\n            {props.unit ? (\n              <h2>{KelvinToDegrees(userData.main.temp)}&deg;C</h2>\n            ) : (\n              <h2>{KelvinToFahrenheit(userData.main.temp)}&deg;F</h2>\n            )}\n            <h4>{userData.weather[0].description}</h4>\n          </div>\n          <div id=\"userTile-container_img\">\n            <div id=\"weather-icon\">\n              <i\n                className={\"owf owf-\" + userData.weather[0].id + \" owf-5x\"}\n              ></i>\n            </div>\n            <div id=\"suntrack-holder\">\n              <SunTrack\n                sunrise={userData.sys.sunrise}\n                sunset={userData.sys.sunset}\n              />\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h3>Make sure to enable Location Services</h3>\n      )}\n    </div>\n  );\n};\n\nexport default UserTile;\n","import React from \"react\";\nimport SunTrack from \"../SunTrack/SunTrack\";\nimport { KelvinToDegrees, KelvinToFahrenheit } from \"../conversions\";\n\nimport \"./Card.scss\";\nimport \"../../weather_icons/css/owfont-regular.css\"\n\nconst Card = (props) => {\n\n  // return difference in User temperature and this location temperature\n  const calcTempDifference = () => {\n    if (props.unit) {\n      const difference = (props.data.main.temp - props.userTemp).toFixed(0);\n      if (difference <= 0) {\n        return difference;\n      } else {\n        return \"+\" + difference;\n      }\n    } else {\n      const difference = (\n        KelvinToFahrenheit(props.data.main.temp) -\n        KelvinToFahrenheit(props.userTemp)\n      ).toFixed(0);\n      if (difference <= 0) {\n        return difference;\n      } else {\n        return \"+\" + difference;\n      }\n    }\n  };\n\n  return (\n    <div id=\"card-wrapper\">\n      <div id=\"card-container\">\n        <div id=\"card-container_text\">\n          <h3>{props.data.name}</h3>\n          {props.unit ? (\n            <h2>\n              {KelvinToDegrees(props.data.main.temp)}&deg;C\n              <span id={calcTempDifference() <= 0 ? \"negative\" : \"positive\"}>\n                ({calcTempDifference()}&deg;C)\n              </span>\n            </h2>\n          ) : (\n            <h2>\n              {KelvinToFahrenheit(props.data.main.temp)}&deg;F\n              <span id={calcTempDifference() <= 0 ? \"negative\" : \"positive\"}>\n                ({calcTempDifference()}&deg;F)\n              </span>\n            </h2>\n          )}\n          <h4>{props.data.weather[0].description}</h4>\n        </div>\n        <div id=\"card-container_img\">\n          <div id=\"weather-icon\">\n            <i className={\"owf owf-\" + props.data.weather[0].id + \" owf-5x\"}></i>\n          </div>\n          <div id=\"suntrack-holder\">\n            <SunTrack\n              sunrise={props.data.sys.sunrise}\n              sunset={props.data.sys.sunset}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport \"./Tags.scss\";\n\nconst Tags = (props) => {\n  const [hover, setHover] = useState(false);\n\n  // When User closes a tag\n  const clickHandler = () => {\n    console.log(\"Handle Click\");\n    props.close(props.index);\n  };\n\n  return (\n    <div className=\"tag-container\" id={hover ? \"tag-hover\": \"\"}>\n      <h5>{props.data}</h5>\n      <CloseIcon\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        onClick={clickHandler}\n        fontSize=\"small\"\n      />\n    </div>\n  );\n};\n\nexport default Tags;\n","import React, { useState } from \"react\";\nimport Form from \"../Form/Form\";\nimport UserTile from \"../UserTile/UserTile\";\nimport Card from \"../Card/Card\";\nimport Tags from \"../Tags/Tags\";\n\nimport \"./Home.scss\";\n\nconst Home = (props) => {\n  // Storing temperature at User location & list of active cities\n  const [userTemp, setUserTemp] = useState(0);\n  const [cities, setCities] = useState([]);\n  \n  // Callback from form submission\n  const formCallback = (data, isLocal) => {\n    setCities((cities) => [...cities, data]);\n    console.log(cities);\n    // check if already exists in local storage\n    if(!isLocal){\n      let cityArr = cities;\n      cityArr.push(data);\n      localStorage.setItem(\"cities\", JSON.stringify(cityArr));\n    }\n  };\n\n  // User has closed a tag\n  const tagCloseCallback = (cityIndex) => {\n    let currCities = [...cities];\n    console.log(cityIndex);\n    currCities.splice(cityIndex, 1);\n    setCities(currCities);\n    \n  }\n\n  return (\n    <div id=\"home-wrapper\">\n      <Form getWeather={formCallback} activeCities={cities}/>\n      <div id=\"tags-wrapper\">\n      {cities.map((city, i) => (\n        <Tags key={i} index={i} data={city.name} close={tagCloseCallback}/>\n      ))}\n      </div>\n      <UserTile unit={props.unit} temp={(temp)=>setUserTemp(temp)}/>\n      {cities.map((city, i) => (\n        <Card key={i} unit={props.unit} data={city} userTemp={userTemp}/>\n      ))}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, {useState} from \"react\";\nimport logo from \"../../images/branding@2x.png\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Fade from \"@material-ui/core/Fade\";\n\nimport \"./Header.scss\";\n\nconst Header = (props) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const clickHandler = (event) => {\n    console.log(\"Handle Click\");\n    // Set Anchor point for pop up item\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (event) => {\n    console.log(\"Handle Close\");\n    console.log(event.currentTarget.innerText.toLowerCase());\n    if(event.currentTarget.innerText.toLowerCase() === \"celsius\"){\n      props.unit(true)\n    } else {\n      props.unit(false);\n    }\n    setAnchorEl(null);\n  }\n\n  return (\n    <div id=\"nav-wrapper\">\n      <div id=\"nav-wrapper_img\">\n        <img src={logo} alt=\"Ediflo\" />\n      </div>\n      <div id=\"nav-wrapper_menu\">\n        <Button aria-controls=\"fade-menu\" onClick={clickHandler} >\n          <MoreVertIcon />\n        </Button>\n        <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Fade}\n        >\n          <MenuItem onClick={handleClose}>Celsius</MenuItem>\n          <MenuItem onClick={handleClose}>Fahrenheit</MenuItem>\n        </Menu>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, {useState} from 'react';\nimport './App.scss';\nimport Home from \"./Components/Home/Home\"\nimport Header from './Components/Header/Header';\n\nfunction App() {\n  const [unit, setUnit] = useState(true);\n\n  const unitCallback = (e) => {\n    console.log(e);\n    setUnit(e);\n  }\n  return (\n    <div className=\"App\">\n      <Header unit={unitCallback}/>\n      <Home unit={unit}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/branding@2x.29c7b80a.png\";"],"sourceRoot":""}